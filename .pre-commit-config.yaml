# Apply to all files without committing:
#   pre-commit run --all-files
# Update this file:
#   pre-commit autoupdate --freeze

# Set the default language versions for the hooks
default_language_version:
  python: python3  # Force all Python hooks to use Python 3

# https://pre-commit.ci/
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: false
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: monthly
  skip: []
  submodules: false

# Globally exclude files
# https://pre-commit.com/#top_level-exclude
exclude: |
  (?x)(
    .github/|
    LICENSE
  )

# pre-commit setup
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 3e8a8703264a2f4a69428a0aa4dcb512790b2c8c  # frozen: v6.0.0
    hooks:
      # Identify invalid files
      - id: check-toml
        name: check-toml (TOML)
        description: Check for syntax errors in TOML files.

      # git checks
      - id: check-merge-conflict
        name: Check for merge conflict strings
        description: Check for files that contain merge conflict strings.

      - id: check-added-large-files
        name: Check for large files
        description: Check for large files that were added to the repository.
        args:
          - --maxkb=1000

      - id: detect-private-key
        name: Detect private key
        description: Check for private keys in the repository.

      - id: check-case-conflict
        name: Check for case conflicts
        description: Check for files with names that differ only in case.

      # General quality checks
      - id: mixed-line-ending
        name: Mixed line ending
        description: Check for mixed line endings.
        args:
          - --fix=lf

      - id: trailing-whitespace
        name: Trailing whitespace
        description: Check for trailing whitespace.
        args:
          - --markdown-linebreak-ext=md

      - id: check-executables-have-shebangs
        name: Check for shebangs in executables
        description: Check that executables have shebangs.

      - id: end-of-file-fixer
        name: End of file fixer
        description: Ensure that files end with a newline.

  - repo: https://github.com/editorconfig-checker/editorconfig-checker.python
    rev: 61529b21391331d7cfd1f191df6293534a1fd79a  # frozen: 3.4.0
    hooks:
      - id: editorconfig-checker
        name: EditorConfig Checker
        description: Check for compliance with the definitions in the EditorConfig file.

  - repo: https://github.com/executablebooks/mdformat
    rev: ff29be1a1ba8029d9375882aa2c812b62112a593  # frozen: 0.7.22
    hooks:
      - id: mdformat
        name: Mdformat
        description: Format Markdown files.
        additional_dependencies:
          - mdformat-gfm==0.4.1  # Mdformat plugin for GitHub Flavored Markdown compatibility » https://github.com/hukkin/mdformat-gfm/tags
          - mdformat-toc==0.3.0  # Mdformat plugin to generate a table of contents » https://github.com/hukkin/mdformat-toc/tags
          - mdformat-black==0.1.1  # Mdformat plugin to Blacken Python code blocks » https://github.com/hukkin/mdformat-black/tags
          - mdformat-shfmt==0.2.0  # Mdformat plugin to format shell code blocks » https://github.com/hukkin/mdformat-shfmt/tags

  - repo: https://github.com/tox-dev/pyproject-fmt
    rev: 8a22e281b3f6d1bb298aaabfc165a943a943882c  # frozen: v2.7.0
    hooks:
      - id: pyproject-fmt
        name: pyproject.toml formatter
        description: Format the pyproject.toml file.
        args:
          - --indent=4
        additional_dependencies:
          - tox==4.30.3  # https://github.com/tox-dev/tox/releases/latest

  - repo: https://github.com/abravalheri/validate-pyproject
    rev: 78f5e0f104cfa803d0597eaa924b4de3becd3e3e  # frozen: v0.24.1
    hooks:
      - id: validate-pyproject
        name: Validate pyproject.toml
        description: Validate the pyproject.toml file.
